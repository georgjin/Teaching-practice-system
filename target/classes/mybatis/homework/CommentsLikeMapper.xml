<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.homework.commentslike.mapper.CommentsLikeMapper">
    
    <resultMap type="CommentsLike" id="CommentsLikeResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="likedId"    column="liked_id"    />
    </resultMap>

    <sql id="selectCommentsLikeVo">
        select id, user_id, liked_id from comments_like
    </sql>

    <select id="selectCommentsLikeList" parameterType="CommentsLike" resultMap="CommentsLikeResult">
        <include refid="selectCommentsLikeVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="likedId != null "> and liked_id = #{likedId}</if>
        </where>
    </select>
    
    <select id="selectCommentsLikeById" parameterType="Long" resultMap="CommentsLikeResult">
        <include refid="selectCommentsLikeVo"/>
        where id = #{id}
    </select>
    <select id="selectCommentsLikeByUserIdWithLikedId" resultMap="CommentsLikeResult">
        select * from comments_like where user_id = #{userId} and liked_id = #{rid}
    </select>

    <insert id="insertCommentsLike" parameterType="CommentsLike" useGeneratedKeys="true" keyProperty="id">
        insert into comments_like
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="likedId != null">liked_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="likedId != null">#{likedId},</if>
         </trim>
    </insert>

    <update id="updateCommentsLike" parameterType="CommentsLike">
        update comments_like
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="likedId != null">liked_id = #{likedId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCommentsLikeById" parameterType="Long">
        delete from comments_like where id = #{id}
    </delete>

    <delete id="deleteCommentsLikeByIds" parameterType="String">
        delete from comments_like where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>